apply plugin: 'com.android.application'
apply plugin: 'android-apt'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "io.github.froodyapp"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 4
        versionName "0.2"
        // vectorDrawables.useSupportLibrary = true // Crashes on KK and below
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        warning 'InvalidPackage'
        disable 'MissingTranslation'
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
    }
}

// Additional repositories
repositories {
    maven {
        url "https://jitpack.io"
    }
    jcenter()
    mavenCentral()
}

dependencies {
    // Sub-Projects
    compile(project(':swagger')) {
        exclude module: "httpmime"
        exclude module: "httpcore"
        exclude module: "httpclient"
    }

    // Jars
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    // Android standard libs
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.android.support:design:25.1.0'
    compile 'com.android.support:support-v4:25.1.0'

    // Open Street Map & Geo
    compile 'org.osmdroid:osmdroid-android:5.6.3'
    compile 'com.github.MKergall:osmbonuspack:6.2'
    compile 'ch.hsr:geohash:1.3.0'

    // More libraries
    compile 'com.jakewharton:butterknife:8.0.1'
    apt 'com.jakewharton:butterknife-compiler:8.0.1'
}

final String RAW_DIR = "app/src/main/res/raw"
final String[] ROOT_TO_RAW_COPYFILES = ["README.md", "LICENSE.md", "CHANGELOG.md", "CONTRIBUTORS.txt"]

// Called before building
task copyRepoFiles(type: Copy) {

    // Copy files over to raw dir
    from rootProject.files(ROOT_TO_RAW_COPYFILES)
    into RAW_DIR.replaceFirst("app/", "")
    rename { String fileName ->
        fileName.replace(fileName, fileName.toLowerCase())
    }

    // Filter Contributors file
    from(rootProject.file("CONTRIBUTORS.txt")) {
        into '.'    // Target already changed to 'src/main/res/raw'
        rename { String fileName ->
            fileName.replace(fileName, fileName.toLowerCase())
        }
        filter { line ->
            (line.toString().matches("..l>>.*") || line.toString().startsWith("## 99l CONTRIBUTORS")) ? null : line.toString().trim().replaceAll(" \\(.*\\)", "")
        }
    }
}

tasks.copyRepoFiles.execute()
